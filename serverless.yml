service: plantuml-serverless

frameworkVersion: ">=1.4.0 <2.0.0"

provider:
  name: aws
  runtime: java8
  region: eu-west-1
  stage: dev
  profile: core
  cfLogs: true
  environment:
    stage: ${self:custom.stage}

plugins:
  - serverless-domain-manager

custom:
  stage: ${opt:stage, self:provider.stage}
  domains:
    plantuml: plantuml.nitorio.us
    dev: plantuml-dev.nitorio.us
  customDomain:
    domainName: ${self:custom.domains.${self:custom.stage}}
    certificateName: plantuml-dev.nitorio.us
    basePath: ''
    stage: "${self:custom.stage}"
    createRoute53Record: true

package:
  artifact: target/plantuml-serverless-0.0.1.jar

functions:
  png:
    handler: com.nitor.plantuml.lambda.PngHandler
    events:
      - http:
          path: png/{encodedUml}
          method: get
          integration: lambda-proxy
          cors: true
  img:
    handler: com.nitor.plantuml.lambda.PngHandler
    events:
      - http:
          path: img/{encodedUml}
          method: get
          integration: lambda-proxy
          cors: true
  svg:
    handler: com.nitor.plantuml.lambda.SvgHandler
    events:
      - http:
          path: svg/{encodedUml}
          method: get
          integration: lambda-proxy
          cors: true
  txt:
    handler: com.nitor.plantuml.lambda.TxtHandler
    events:
      - http:
          path: txt/{encodedUml}
          method: get
          integration: lambda-proxy
          cors: true
  map:
    handler: com.nitor.plantuml.lambda.MapHandler
    events:
      - http:
          path: map/{encodedUml}
          method: get
          integration: lambda-proxy
          cors: true
  check:
    handler: com.nitor.plantuml.lambda.SyntaxHandler
    events:
      - http:
          path: check/{encodedUml}
          method: get
          integration: lambda-proxy
          cors: true
