service: plantuml-serverless

frameworkVersion: ">=2.46.0 <3.0.0"
variablesResolutionMode: 20210326

provider:
  name: aws
  region: us-east-1
  stage: dev
  timeout: 30
  logRetentionInDays: 30
  lambdaHashingVersion: 20201221
  environment:
    stage: ${self:custom.stage}
  ecr:
    scanOnPush: true
    images:
      lambdacontainer:
        path: ./
        file: lambdacontainer/Dockerfile

plugins:
  - serverless-certificate-creator
  - serverless-domain-manager

custom:
  stage: ${opt:stage, self:provider.stage}
  domains:
    prod: plantuml.nitorio.us
    dev: plantuml-dev.nitorio.us
  customCertificate:
    certificateName: ${self:custom.domains.${self:custom.stage}}
    idempotencyToken: "plantumlserverless"
    hostedZoneIds: "Z2N6543C2MYFH4"
    region: us-east-1 # us-east-1 required for edge type CloudFront endpoint
    # optional, default false. this is useful if you managed to delete your certificate but the dns validation records still exist
    rewriteRecords: true
  customDomain:
    domainName: ${self:custom.domains.${self:custom.stage}}
    certificateName: ${self:custom.domains.${self:custom.stage}}
    basePath: ''
    stage: "${self:custom.stage}"
    createRoute53Record: true
    endpointType: edge

functions:
  plantuml:
    events:
      - http:
          path: /
          method: post
          integration: lambda-proxy
          cors: true
          request:
            template:
              application/json: '{ "body": $input.json("$") }'
      - http:
          path: /{proxy+}
          method: post
          integration: lambda-proxy
          cors: true
          request:
            template:
              application/json: '{ "body": $input.json("$") }'
    image:
      name: lambdacontainer
      command:
        - tech.architechsolutions.plantuml.lambda.MainHandler::handleRequest

resources:
  Description: PlantUML Serverless
